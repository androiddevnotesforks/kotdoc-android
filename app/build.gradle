import no.mhl.kotdoc.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "no.mhl.kotdoc"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        useIR = true
        freeCompilerArgs += ["-Xallow-jvm-ir-dependencies"]
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
        kotlinCompilerVersion Libs.Kotlin.version
    }

}

dependencies {

    // Hilt
    implementation Libs.Hilt.android
    kapt Libs.Hilt.kapt

    // Kotlin
    implementation Libs.Kotlin.ktx

    // Design
    implementation Libs.AndroidX.appCompat
    implementation Libs.AndroidX.material

    // Compose
    implementation Libs.AndroidX.Compose.ui
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.viewModel
    implementation Libs.AndroidX.Compose.tooling
    implementation Libs.AndroidX.Compose.runtime
    implementation Libs.AndroidX.Compose.runtimeLiveData

    // Lifecycle
    implementation Libs.AndroidX.Lifecycle.runtime
    implementation Libs.AndroidX.Lifecycle.liveData

    // Navigation
    implementation Libs.AndroidX.navigation

    // Activity
    implementation Libs.AndroidX.activity

    // Coroutines
    implementation Libs.Kotlin.coroutines

    // Retrofit
    implementation Libs.Retrofit.retrofit
    implementation Libs.Retrofit.gsonConverter

    // Markdown Parser
    implementation project(Libs.MarkdownParser.local)

}